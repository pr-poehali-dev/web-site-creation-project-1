import React from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import { shareVideoToWhatsApp } from '@/utils/whatsapp';
import type { FormData } from './LeadForm';
import type { LocationData } from '@/hooks/useTelegram';
import { useTelegram } from '@/hooks/useTelegram';

interface VideoRecorderProps {
  isRecording: boolean;
  videoURL: string;
  videoBlob: Blob | null;
  onStartRecording: () => void;
  onStopRecording: () => void;
  onRetakeVideo: () => void;
  onShareToTelegram?: (videoBlob: Blob, formData: FormData, location: LocationData | null) => Promise<void>;
  videoRef: React.RefObject<HTMLVideoElement>;
  formData?: FormData;
  location?: LocationData | null;
}

const VideoRecorder: React.FC<VideoRecorderProps> = ({
  isRecording,
  videoURL,
  videoBlob,
  onStartRecording,
  onStopRecording,
  onRetakeVideo,
  onShareToTelegram,
  videoRef,
  formData,
  location
}) => {
  const { getCurrentLocation } = useTelegram();

  const handleShareToWhatsApp = async () => {
    if (!videoBlob) return;
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    let currentLocation = location;
    if (!currentLocation) {
      try {
        currentLocation = await getCurrentLocation();
      } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –¥–ª—è WhatsApp:', error);
      }
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã
    let message = 'üé• –ù–æ–≤–æ–µ –≤–∏–¥–µ–æ!\n\n';
    
    if (formData) {
      message += `üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –î–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã:\n`;
      message += `üìù –†–æ–¥–∏—Ç–µ–ª—å: ${formData.parentName}\n`;
      message += `üë∂ –†–µ–±–µ–Ω–æ–∫: ${formData.childName}\n`;
      message += `üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${formData.age}\n`;
      message += `üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}\n`;
      if (formData.promoterName) {
        message += `ü§ù –ü—Ä–æ–º–æ—É—Ç–µ—Ä: ${formData.promoterName}\n`;
      }
      message += '\n';
    }
    
    if (currentLocation) {
      message += `üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n`;
      message += `üåç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${currentLocation.latitude}, ${currentLocation.longitude}\n`;
      if (currentLocation.address) {
        message += `üè† –ê–¥—Ä–µ—Å: ${currentLocation.address}\n`;
      }
      message += '\n';
    }
    
    message += 'üíº –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ –ò–º–ø–µ—Ä–∏—è –ü—Ä–æ–º–æ';
    
    const success = await shareVideoToWhatsApp(videoBlob, message);
    if (!success) {
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ WhatsApp. –í–∏–¥–µ–æ –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω–æ.');
    }
  };
  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center">
          <Icon name="Video" className="mr-2" size={20} />
          –í–∏–¥–µ–æ–∑–∞–ø–∏—Å—å
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="aspect-video bg-gray-900 rounded-lg overflow-hidden">
            <video
              ref={videoRef}
              autoPlay
              muted
              playsInline
              className="w-full h-full object-cover"
              style={{ display: isRecording || !videoURL ? 'block' : 'none' }}
            />
            {videoURL && !isRecording && (
              <video
                src={videoURL}
                controls
                className="w-full h-full object-cover"
              />
            )}
          </div>
          
          <div className="flex gap-2">
            {!isRecording && !videoURL && (
              <Button
                onClick={onStartRecording}
                className="flex-1"
              >
                <Icon name="Camera" className="mr-2" size={16} />
                –ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å
              </Button>
            )}
            
            {isRecording && (
              <Button
                onClick={onStopRecording}
                variant="destructive"
                className="flex-1"
              >
                <Icon name="Square" className="mr-2" size={16} />
                –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
              </Button>
            )}
            
            {videoURL && !isRecording && (
              <>
                <Button
                  onClick={onRetakeVideo}
                  variant="outline"
                  className="flex-1"
                >
                  <Icon name="RotateCcw" className="mr-2" size={16} />
                  –ü–µ—Ä–µ—Å—ä–µ–º–∫–∞
                </Button>
                <Button
                  onClick={handleShareToWhatsApp}
                  className="flex-1 bg-green-600 hover:bg-green-700"
                  disabled={!videoBlob}
                >
                  <Icon name="Send" className="mr-2" size={16} />
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏–¥
                </Button>
              </>
            )}
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default VideoRecorder;